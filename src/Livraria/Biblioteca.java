package Livraria;

import java.util.ArrayList;
import java.util.List;

public class Biblioteca {

    // Lista com todos os livros dispon√≠veis na biblioteca
    private List<Livro> listaLivros = new ArrayList<>();

    // Lista com todos os usu√°rios cadastrados (alunos, professores, etc.)
    private List<Usuario> listaUsuario = new ArrayList<>();

    // Lista com todos os empr√©stimos ativos (livros que est√£o com algu√©m)
    private List<Emprestimo> listaEmprestados = new ArrayList<>();

    // Adiciona um livro na lista da biblioteca
    public void adicionarLivro(Livro livro) {
        listaLivros.add(livro);
    }

    // Adiciona um usu√°rio (aluno, professor...) na lista
    public void adicionarUsuario(Usuario usuario) {
        listaUsuario.add(usuario);
    }

    // Busca um usu√°rio pelo ID (por exemplo, 1, 2, 3...)
    public Usuario buscarIdUsuario(int id) {
        for (Usuario usuario : listaUsuario) {
            if (usuario.getId() == id) {
                return usuario; // Retorna o usu√°rio se encontrar
            }
        }
        return null; // Retorna null se n√£o encontrar
    }

    // Busca um livro pelo c√≥digo (por exemplo: "1", "A1", etc.)
    public Livro buscarIdLivro(String id) {
        for (Livro livro : listaLivros) {
            if (livro.getCodigo().equals(id)) {
                return livro; // Retorna o livro se encontrar
            }
        }
        return null; // Retorna null se n√£o encontrar
    }

    // Faz o empr√©stimo de um livro para um usu√°rio
    public void emprestarLivro(int usuarioId, String codigoLivro) {
        // Busca o usu√°rio e o livro pelo ID e c√≥digo
        Usuario user = buscarIdUsuario(usuarioId);
        Livro liv = buscarIdLivro(codigoLivro);

        // Verifica se usu√°rio e livro existem
        if (user != null && liv != null) {

            // üõë Verifica se o livro j√° est√° emprestado para algu√©m
            for (Emprestimo emp : listaEmprestados) {
                if (emp.getLivro().getCodigo().equals(codigoLivro)) {
                    System.out.println("Este livro j√° est√° emprestado.");
                    return; // Sai do m√©todo e n√£o empresta
                }
            }

            // ‚úÖ Conta quantos livros o usu√°rio j√° pegou
            int cont = 0;
            for (Emprestimo emp : listaEmprestados) {
                if (emp.getUsuario().getId() == usuarioId) {
                    cont++; // Conta empr√©stimos do mesmo usu√°rio
                }
            }

            // Se o usu√°rio ainda n√£o atingiu o limite de empr√©stimos...
            if (cont < user.getLimiteEmprestimos()) {
                // Cria o empr√©stimo e adiciona na lista
                Emprestimo emprestimo = new Emprestimo(liv, user);
                listaEmprestados.add(emprestimo);
                System.out.println("Livro emprestado com sucesso");
            } else {
                // Se j√° atingiu o limite...
                System.out.println("Limite de empr√©stimos atingido");
            }

        } else {
            // Se usu√°rio ou livro n√£o forem encontrados
            System.out.println("Usu√°rio ou livro n√£o encontrado");
        }
    }

    // Faz a devolu√ß√£o de um livro por parte do usu√°rio
    public void devolverLivro(Usuario u, String codigoLivro) {
        Emprestimo encontrado = null;

        // Procura o empr√©stimo correspondente ao usu√°rio e livro
        for (Emprestimo emp : listaEmprestados) {
            if (emp.getUsuario().getId() == u.getId() &&
                emp.getLivro().getCodigo().equals(codigoLivro)) {
                encontrado = emp;
                break; // Para de procurar assim que encontra
            }
        }

        // Se encontrou o empr√©stimo, remove da lista
        if (encontrado != null) {
            listaEmprestados.remove(encontrado);
            System.out.println("Livro devolvido com sucesso.");
        } else {
            // Se n√£o encontrou
            System.out.println("Empr√©stimo n√£o encontrado.");
        }
    }
}
