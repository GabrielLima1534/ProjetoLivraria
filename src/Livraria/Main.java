package Livraria;

public class Main {

	public static void main(String[] args) {
		
		// Cria a biblioteca onde os livros e usu√°rios ser√£o gerenciados
		Biblioteca biblioteca = new Biblioteca();

		// Cria um professor com ID 3
		Usuario P1 = new Professor(3, "Mario", "mariosgames@gmail.com");

		// Adiciona o professor na lista de usu√°rios da biblioteca
		biblioteca.adicionarUsuario(P1);

		// Cria dois alunos com ID 1 e 2
		Usuario Aluno1 = new Aluno(1, "Gabriel", "gabriel@gmail.com");
		Usuario Aluno2 = new Aluno(2, "Jo√£o", "Joao@gmail.com");

		// Adiciona os alunos na lista de usu√°rios da biblioteca
		biblioteca.adicionarUsuario(Aluno1);
		biblioteca.adicionarUsuario(Aluno2);

		// Cria quatro livros com c√≥digos √∫nicos
		Livro A = new Livro("1", "Dom Casmurro", "Machado de Assis");
		Livro B = new Livro("2", "Harry Potter", "J.K. Rowling");
		Livro C = new Livro("3", "Mang√° Naruto", "Masashi Kishimoto");
		Livro D = new Livro("4", "Mang√° One Piece", "Eiichiro Oda");

		// Adiciona os livros √† biblioteca
		biblioteca.adicionarLivro(A);
		biblioteca.adicionarLivro(B);
		biblioteca.adicionarLivro(C);
		biblioteca.adicionarLivro(D);

		// üü¢ Gabriel (ID 1) pega o livro "Dom Casmurro" (c√≥digo "1") ‚Äî deve funcionar
		biblioteca.emprestarLivro(1, "1");

		// üî¥ Professor Mario (ID 3) tenta pegar o mesmo livro "1" ‚Äî deve falhar (j√° est√° emprestado)
		biblioteca.emprestarLivro(3, "1");

		// üü¢ Gabriel pega o livro "Harry Potter" (c√≥digo "2") ‚Äî ainda dentro do limite
		biblioteca.emprestarLivro(1, "2");

		// üî¥ Gabriel tenta pegar "Mang√° Naruto" (c√≥digo "3") ‚Äî deve falhar (limite de 2 atingido)
		biblioteca.emprestarLivro(1, "3");

		// üî¥ Gabriel tenta pegar outro livro "One Piece" ‚Äî tamb√©m falha pelo limite
		biblioteca.emprestarLivro(1, "4");

		// DICA: voc√™ pode adicionar devolu√ß√£o aqui para testar depois:
		// biblioteca.devolverLivro(Aluno1, "1");
		// biblioteca.emprestarLivro(1, "3"); // Depois da devolu√ß√£o, esse passaria

	}
}
